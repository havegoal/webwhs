# syntax = docker/dockerfile:1

# Make sure RUBY_VERSION matches the Ruby version in .ruby-version and Gemfile
ARG RUBY_VERSION=3.3.5
FROM registry.docker.com/library/ruby:$RUBY_VERSION-slim as base

# Rails app lives here
WORKDIR /rails

# Install packages needed to build gems and node modules
RUN apt-get update -qq && apt-get install -y vim && \
    apt-get install --no-install-recommends -y build-essential curl libjemalloc2 git libpq-dev libvips node-gyp pkg-config python-is-python3 postgresql-client

# Install JavaScript dependencies
# ARG NODE_VERSION=18.15.0
# ARG YARN_VERSION=1.22.22
# ENV PATH=/usr/local/node/bin:$PATH
# RUN curl -sL https://github.com/nodenv/node-build/archive/master.tar.gz | tar xz -C /tmp/ && \
# /tmp/node-build-master/bin/node-build "${NODE_VERSION}" /usr/local/node && \
# npm install -g yarn@$YARN_VERSION && \
# rm -rf /tmp/node-build-master


COPY . .

ENV BUNDLE_PATH="/gems" \
    EDITOR="vim"

# https://guides.rubyonrails.org/configuring.html#actiondispatch-hostauthorization
# ENV RAILS_DEVELOPMENT_HOSTS=assets.pm.local,assets.0512.local

# Run and own only the runtime files as a non-root user for security
RUN groupadd --system --gid 1000 rails && \
    useradd rails --uid 1000 --gid 1000 --create-home --shell /bin/bash && \
    mkdir /gems && chown -R rails:rails /gems
    #chown -R rails:rails db log storage tmp && \

USER 1000:1000

# Entrypoint prepares the database.
# ENTRYPOINT ["/rails/bin/docker-entrypoint"]

CMD ["/bin/sh", "-c", "while sleep 1000; do :; done"]

